{"version":3,"sources":["shared/components/Section/Section.module.css","client/Filter/Filter.module.css","shared/Styles/App/App.module.css","client/ContactForm/ContactForm.jsx","shared/components/Section/Section.jsx","client/ContactList/ContactList.jsx","client/Filter/Filter.jsx","shared/Styles/GlobalStyles.js","App.js","index.js","shared/Styles/Button/Button.module.css","client/ContactForm/ContactForm.module.css","client/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","addContact","preventAddSameContacts","useState","name","setName","number","setNumber","onInputChange","e","target","value","className","s","title","onSubmit","preventDefault","alert","contactForm","input","type","pattern","required","onChange","buttonStyle","button","Section","children","section","PhoneList","findContact","filterName","state","deleteContact","contactWrapper","map","id","contactItem","onClick","Filter","getFilterValue","filterInput","placeholder","GlobalStyles","createGlobalStyle","App","contacts","setContacts","setFilterName","useEffect","contactsFromLocalSt","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","appWrapper","v4","prev","length","some","contact","toLowerCase","filter","item","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e779296.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Wjva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3TjXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__27jEG\"};","import { useState } from \"react\";\nimport s from './ContactForm.module.css';\nimport buttonStyle from '../../shared/Styles/Button/Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm({ addContact, preventAddSameContacts }) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n\n        if (preventAddSameContacts(name)) {\n            alert(`${name} is alredy in your contacts`)\n            setName('');\n            setNumber('');\n            return;\n        }\n\n        addContact(name, number);\n        setName('');\n        setNumber('');\n    };\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n\n        }\n    };\n\n    return (\n        <>\n            <h2 className={s.title}>Phonebook</h2>\n            <form onSubmit={onSubmitForm} className={s.contactForm}>\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onInputChange}\n                    value={name}\n                />\n                <input\n                    className={s.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={onInputChange}\n                />\n                <button className={buttonStyle.button} type=\"submit\">add</button>\n            </form>\n        </>\n    )\n\n};\n\n\nContactForm.propTypes = {\n    addContact: PropTypes.func,\n    preventAddSameContacts: PropTypes.func.isRequired\n\n}\n\n\n","import s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n    return (\n        <section className={s.section}>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nexport default Section;","import buttonStyle from '../../shared/Styles/Button/Button.module.css';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function PhoneList({ findContact, filterName, state, deleteContact }) {\n\n    return (\n        <ul className={s.contactWrapper}>\n            {filterName ?\n                findContact().map(({ name, number, id }) => <li\n                    className={s.contactItem}\n                    key={id} >{name} {number}\n                    <button id={id} onClick={deleteContact} className={buttonStyle.button}>Delete</button>\n                </li>)\n                : state.map(({ name, number, id }) => <li\n                    className={s.contactItem}\n                    key={id} >{name} {number}\n                    <button className={buttonStyle.button} id={id} onClick={deleteContact}>Delete</button>\n                </li>)}\n        </ul>\n    )\n}\n\nPhoneList.propTypes = {\n    findContact: PropTypes.func.isRequired,\n    filterName: PropTypes.string,\n    state: PropTypes.array.isRequired,\n    deleteContact: PropTypes.func.isRequired\n}\n\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\n\nexport default function Filter({ getFilterValue, filterName }) {\n\n    const addFilterValue = (e) => {\n        const { value } = e.target;\n\n        getFilterValue(value)\n    }\n\n    return (\n        <>\n            <input\n                className={s.filterInput}\n                type=\"text\"\n                value={filterName}\n                onChange={addFilterValue}\n                placeholder='Find contacts by name '\n            />\n        </>\n    )\n\n}\n\nFilter.propTypes = {\n    setFilterValue: PropTypes.func.isRequired\n}\n","import { createGlobalStyle } from 'styled-components';\n\n\n\nexport const GlobalStyles = createGlobalStyle`\n    html {\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  paddingL: 0;\n  \n    }\n    ul{\n        list-style: none;\n        margin: 0;\n        padding: 0;\n\n    }\n    body {\n    margin: 0;\n    padding: 0;\n    }\n\n\nmain {\n  display: block;\n\n}\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\npre {\n  font-family: monospace, monospace; 】\n  font-size: 1em; 】\n}\na {\n  background-color: transparent;\n}\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\nb,\nstrong {\n  font-weight: bolder;\n}\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; 】\n  font-size: 1em;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\nimg {\n  border-style: none;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; 】\n  font-size: 100%;\n  line-height: 1.15;\n  margin: 0;\n}\nbutton,\ninput {\n  overflow: visible;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n】\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\nprogress {\n  vertical-align: baseline;\n}\ntextarea {\n  overflow: auto;\n}\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\ndetails {\n  display: block;\n}\nsummary {\n  display: list-item;\n}\ntemplate {\n  display: none;\n}\n[hidden] {\n  display: none;\n}\n`;\n\n\n","import { useState, useEffect } from \"react\";\nimport { v4 } from 'uuid'\nimport ContactForm from \"./client/ContactForm\";\nimport Section from \"./shared/components/Section/Section\";\nimport ContactList from \"./client/ContactList\";\nimport Filter from \"./client/Filter\";\n\nimport { GlobalStyles } from \"./shared/Styles/GlobalStyles\";\nimport s from './shared/Styles/App/App.module.css';\n\n\nexport default function App() {\n\n  const [contacts, setContacts] = useState([]);\n  const [filterName, setFilterName] = useState('');\n\n  useEffect(() => {\n    const contactsFromLocalSt = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contactsFromLocalSt);\n    if (parseContacts) {\n      setContacts(parseContacts)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts]);\n\n\n\n  const preventAddSameContacts = name => {\n    if (contacts.length) {\n      return contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n    }\n    return false;\n  };\n\n  const deleteContact = e => {\n    const id = e.target.id;\n    setContacts(prev => prev.filter(contact => contact.id !== id))\n  };\n\n  const findContact = () =>\n    contacts.filter(item =>\n      item.name.toLowerCase().includes(filterName.toLowerCase()),\n    );\n\n  const addContact = (name, number) => {\n    if (contacts === []) setContacts([{ id: v4(), name, number }]);\n\n    setContacts(prev => [...prev, { id: v4(), name, number }])\n  };\n\n  const getFilterValue = (value) => {\n    setFilterName(value)\n  }\n\n  return (\n    <div className={s.appWrapper} >\n      <GlobalStyles />\n      <ContactForm addContact={addContact} preventAddSameContacts={preventAddSameContacts} />\n      <Section title=\"My Contacts\">\n        <Filter getFilterValue={getFilterValue} filterName={filterName} />\n        <ContactList findContact={findContact} filterName={filterName} state={contacts} deleteContact={deleteContact} />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3UKxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2lAiI\",\"input\":\"ContactForm_input__122Fq\",\"title\":\"ContactForm_title__aSe32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactWrapper\":\"ContactList_contactWrapper__3gP-g\",\"contactItem\":\"ContactList_contactItem__VyF2b\"};"],"sourceRoot":""}